name: Hotfix Build

on:
  push:
    branches:
    - release-*_hotfixes

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Xmx6g -Xms6g

jobs:
  branch-build:
    # Only run this on repositories in the 'armory-io' org
    if: startsWith(github.repository, 'armory-io/')
    env:
      BASE_PROJECT: clouddriver
      GRADLE_ARGS: -Partifactory_user=${{secrets.ARTIFACTORY_USER}} -Partifactory_password=${{secrets.ARTIFACTORY_PASSWORD}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Install Java 8 for cross-compilation support. Setting it up before
      # Java 11 means it comes later in $PATH (because of how setup-java works)
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Determine version
        id: build-info
        run: |
          branch=$(git rev-parse --abbrev-ref HEAD)
          semVersion=$(echo "$branch" | sed 's|release-||' | sed 's|_hotfixes||')
          read -r major minor patch <<< "${semVersion//./ }"
          armoryBranch=release-2.${minor}.x_hotfixes
          version=${semVersion}-hotfixes-$(echo ${GITHUB_SHA} | cut -c1-7)
          echo "Building version: $version"
          echo "##[set-output name=version;]$version"
          echo "##[set-output name=armoryBranch;]$armoryBranch"
      - name: Checkout armory-io/clouddriver-armory
        uses: actions/checkout@v2
        with:
          repository: 'armory-io/clouddriver-armory'
          ref: ${{ steps.build-info.outputs.armoryBranch }}
          path: 'external/clouddriver-armory'
          token: ${{ secrets.EXTENDED_TOKEN_GITHUB }}
      - name: Build
        run: ./gradlew -Pversion=${{ steps.build-info.outputs.version }} -PenableCrossCompilerPlugin=true build --stacktrace
      - name: Publish to Artifactory
        run: ./gradlew $GRADLE_ARGS -Pversion=${{ steps.build-info.outputs.version }} artifactPublish -x test
      - name: Update armory-io/clouddriver-armory
        run: |
          cd external/clouddriver-armory
          sed 's|spinnakerRelease=.*|spinnakerRelease=${{ steps.build-info.outputs.version }}|' gradle.properties > gradle.properties.new
          mv gradle.properties.new gradle.properties
          git add gradle.properties
          if [[ "x$(git status --porcelain)" != "x" ]] ; then
            git config user.email "githubactions@fake.com"
            git config user.name "Github Actions"
            git commit -m "chore(dependencies): Autobump oss clouddriver version"
            git pull
            git push
          fi
          git status

      # Adding OSS docker build
      - name: Login to Docker Hub
        if: startsWith(github.ref, 'refs/heads/release-') && endsWith(github.ref, '_hotfixes')
        run: docker login -u ${{ secrets.DOCKER_HUB_USER }} -p '${{ secrets.DOCKER_HUB_PASS }}'

      - name: Build Hotfix Release
        if: startsWith(github.ref, 'refs/heads/release-') && endsWith(github.ref, '_hotfixes')
        run: |
          echo "Building Hotfix Image"
          docker build -t compile -f Dockerfile.compile . && docker build -t armory/$BASE_PROJECT:${{ steps.build-info.outputs.version }} -f Dockerfile.slim .

      - name: Publish Release to Docker Hub
        if: startsWith(github.ref, 'refs/heads/release-') && endsWith(github.ref, '_hotfixes')
        run: |
          echo "Pushing Hotfix Image"
          docker push armory/$BASE_PROJECT:${{ steps.build-info.outputs.version }}
