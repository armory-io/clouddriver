name: Release

on:
  push:
    branches:
      - CDSH-497-release-1.31.x

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Xmx12g -Xms12g
  CONTAINER_REGISTRY: index.docker.io/armory

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      #https://github.com/NASA-IMPACT/hls-base/pull/17/files borrowed from this....
      - name: Create more disk space
        run: sudo rm -rf /usr/share/dotnet && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: actions/setup-java@v4
        with:
          java-version: |
            17
            11
          distribution: 'zulu'
          cache: 'gradle'
      - name: Assemble release info
        id: release_info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          . .github/workflows/release_info.sh ${{ github.event.repository.full_name }}
          echo CHANGELOG=$(echo -e "${CHANGELOG}") >> $GITHUB_OUTPUT
          echo SKIP_RELEASE="${SKIP_RELEASE}" >> $GITHUB_OUTPUT
          echo IS_CANDIDATE="${IS_CANDIDATE}" >> $GITHUB_OUTPUT
          echo RELEASE_VERSION="${RELEASE_VERSION}" >> $GITHUB_OUTPUT
      - name: Prepare build variables
        id: build_variables
        run: |
          echo REPO="${GITHUB_REPOSITORY##*/}" >> $GITHUB_OUTPUT
          echo VERSION="$(git rev-parse --short HEAD)-$(date --utc +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_HUB_USER }} -p '${{ secrets.DOCKER_HUB_PASS }}'

#      - name: Build and publish slim container image
#        # Only run this on repositories in the 'spinnaker' org, not on forks.
#        if: startsWith(github.repository, 'spinnaker/')
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: Dockerfile.slim
#          platforms: linux/amd64,linux/arm64
#          push: false
#          tags: |
#            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-unvalidated"
#            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-unvalidated-slim"
#            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-${{ steps.build_variables.outputs.VERSION }}-unvalidated-slim"
#      - name: Build and publish ubuntu container image
#        # Only run this on repositories in the 'spinnaker' org, not on forks.
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: Dockerfile.ubuntu
#          platforms: linux/amd64,linux/arm64
#          push: false
#          tags: |
#            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-unvalidated-ubuntu"
#            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-${{ steps.build_variables.outputs.VERSION }}-unvalidated-ubuntu"
      - name: Build and publish slim JRE 11 container image
        # Only run this on repositories in the 'spinnaker' org, not on forks.
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.java11.slim
          platforms: linux/amd64,linux/arm64
          push: false
          tags: |
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-java11-unvalidated"
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-java11-unvalidated-slim"
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-${{ steps.build_variables.outputs.VERSION }}-java11-unvalidated-slim"
      - name: Build and publish ubuntu JRE 11 container image
        # Only run this on repositories in the 'spinnaker' org, not on forks.
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.java11.ubuntu
          platforms: linux/amd64,linux/arm64
          push: false
          tags: |
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-java11-unvalidated-ubuntu"
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-${{ steps.build_variables.outputs.VERSION }}-java11-unvalidated-ubuntu"

      - name: Publish Image to Docker Hub
        run: |
          docker image tag ${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-${{ steps.build_variables.outputs.VERSION }}-java11-unvalidated-slim armory/clouddriver:1.31.2024.02.28.15.12.05.CDSH-497-slim
          docker push armory/clouddriver:1.31.2024.02.28.15.12.05.CDSH-497-slim
          docker image tag "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-${{ steps.build_variables.outputs.VERSION }}-java11-unvalidated-ubuntu" armory/clouddriver:1.31.2024.02.28.15.12.05.CDSH-497-ubuntu
          docker push armory/clouddriver:1.31.2024.02.28.15.12.05.CDSH-497-ubuntu
